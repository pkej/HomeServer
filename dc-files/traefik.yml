version: "3.9"
secrets:
  cf_email0:
    file: $SECRETSDIR/cf_email0
  cf_api_key0:
    file: $SECRETSDIR/cf_api_key0
  htpasswd:
    file: $SECRETSDIR/htpasswd

networks:
  t2_proxy:
    name: t2_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24
  socket_proxy:
    name: socket_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.91.0/24
  default:
    driver: bridge

services:
# All services / apps go below this line
# Traefik 2 - Reverse Proxy
  traefik:
    container_name: traefik
    domainname: localhost
    image: traefik:latest
    restart: unless-stopped
    depends_on:
      - socket-proxy
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.dnsovertls.address=:853
      - --entrypoints.dns.address=:53
      - --entrypoints.udpdns.address=:53/udp
      - --certificatesresolvers.dns-cloudflare.acme.tlschallenge=true
      - --certificatesresolvers.dns-cloudflare.acme.email=/run/secrets/cf_email0
      - --certificatesresolvers.dns-cloudflare.acme.storage=/acme.json
      #- --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing

      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate

      # entrypoints.<your_entrypoint_name>.http.redirections...
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api.dashboard=true
      - --api=true
      - --api.insecure=true
      #      - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=FATAL # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      #- --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedByDefault=false
      - --entrypoints.https.http.tls.options=tls-opts@file
      - --entrypoints.https.http.tls.certresolver=dns-cloudflare
      - --entrypoints.https.http.tls.domains[0].main=$DOMAINNAME0
      - --entrypoints.https.http.tls.domains[0].sans=*.$DOMAINNAME0
      - --providers.docker.network=t2_proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
      #- --providers.file.filename=/path/to/file # Load dynamic configuration from a file.
      - --providers.file.watch=true # Only works on top level files in the rules folder
      - --pilot.token=$TRAEFIK_PILOT_TOKEN
    networks:
      - t2_proxy
      - socket_proxy
    security_opt:
        - no-new-privileges:true
    ports:
      - 53:53
      - 53:53/udp
      - 80:80
      - 443:443
      - 853:853
      - 8080:8080
    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock:ro
      - $CONFIGDIR/traefik2/rules:/rules 
      - $CONFIGDIR/traefik2/acme/acme.json:/acme.json 
      - $CONFIGDIR/traefik2/traefik.log:/traefik.log 
      #- $SHAREDDIR:/shared
      - $SECRETSDIR:/secrets
    environment:
      - CF_API_EMAIL=$CF_EMAIL0
      - CF_API_KEY=$CF_API_KEY0
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - HTPASSWD_FILE=/run/secrets/htpasswd # HTPASSWD_FILE can be whatever as it is not used/called anywhere.
    secrets:
      - cf_email0
      - cf_api_key0
      - htpasswd
    labels:
      - "traefik.enable=true"
      ## HTTP Services
      - "traefik.http.services.traefik-svc.loadbalancer.server.port=8080"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=https"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME0`)"
      ## Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      ## Healthcheck/ping
      #- "traefik.http.routers.ping.rule=Host(`traefik.$DOMAINNAME0`) && Path(`/ping`)"
      #- "traefik.http.routers.ping.tls=true"
      #- "traefik.http.routers.ping.service=ping@internal"
      ## Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file"
